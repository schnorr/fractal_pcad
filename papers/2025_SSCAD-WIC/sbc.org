# -*- coding: utf-8 -*-
# -*- mode: org -*-

#+TITLE: Load Balancing Mandelbrot Article
#+AUTHOR: Lucas Mello Schnorr, Francisco Pegoraro Etcheverria, Rayan Raddatz de Matos, Kenichi Brumati

#+STARTUP: overview indent
#+LANGUAGE: en
#+OPTIONS: H:3 creator:nil timestamp:nil skip:nil toc:nil num:t ^:nil ~:~
#+OPTIONS: author:nil title:nil date:nil
#+TAGS: noexport(n) deprecated(d) ignore(i)
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport

#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS: [12pt]

#+LATEX_HEADER: \sloppy

# PDF generation can be done by make (thanks Luka Stanisic)
#   or C-c C-e l p (thanks Vinicius Garcia)

* Chamada de Trabalhos SSCAD-WIC                                   :noexport:

O Workshop de Iniciação Científica em Arquitetura de Computadores e
Computação de Alto Desempenho (SSCAD-WIC) é um evento anual, realizado
em conjunto com o Simpósio em Sistemas Computacionais de Alto
Desempenho (SSCAD) desde 2007, oferecendo uma oportunidade para os
alunos de graduação apresentarem e discutirem seus trabalhos nos
tópicos de interesse do SSCAD.

Os artigos aceitos no evento serão publicados em formato digital e
apresentados apenas na modalidade oral. Os artigos poderão ser
redigidos em português ou inglês. O processo de submissão de trabalhos
é eletrônico através do sistema JEMS onde serão aceitos somente
arquivos no formato PDF. Os anais serão publicados na SBC OpenLib
(SOL).

Os três melhores artigos aceitos no SSCAD-WIC receberão premiação.
Datas Importantes

    Submissão de trabalhos:31/07/2025
    Notificação de aceitação: 19/09/2024
    Envio da versão final: 25/09/2024

Tópicos de Interesse

A chamada de trabalhos está aberta (mas não limitada) aos seguintes
tópicos de interesse:

    Algoritmos Paralelos e Distribuídos
    Aplicações de Computação de Alto Desempenho
    Big Data (fundamentos; infraestrutura; administração e gerenciamento; descoberta e mineração; segurança e privacidade; aplicações)
    Aprendizado de Máquina em Alto Desempenho
    Arquiteturas de Computadores
    Arquiteturas Avançadas, Dedicadas e específicas
    Avaliação, Medição e Predição de Desempenho
    Computação em Aglomerados de Computadores
    Computação Heterogênea
    Computação de Alto Desempenho em Grade e na Nuvem
    Computação Móvel de Alto Desempenho
    Computação Móvel, Pervasiva e Embarcada
    Computação Quântica
    Engenharia de Desempenho
    Escalonamento e Balanceamento de Carga
    Internet das Coisas (IoT)
    Linguagens, Compiladores e Ferramentas para Alto Desempenho
    Memória Compartilhada Distribuída (DSM)
    Modelagem e Simulação de Arquiteturas e Sistemas Paralelos/Sistemas Distribuídos
    Redes e Protocolos de Comunicação de Alto Desempenho
    Simulação de Arquiteturas e Sistemas Paralelos
    Sistemas de Arquivos e Entrada e Saída de Alto Desempenho
    Sistemas de Banco de Dados Paralelos e Distribuídos
    Sistemas de Memória
    Sistemas Operacionais
    Sistemas Tolerantes a Falhas
    Software Básico para Computação Paralela e Distribuída
    Técnicas e Métodos de Extração de Paralelismo
    Teste e Depuração de Programas Concorrentes
    Virtualização

Submissões

A submissão de artigos para o SSCAD-WIC 2025 deve ser feita pelo
sistema JEMS da SBC. Os artigos submetidos devem ser escritos em
português ou inglês e obedecer ao limite de 8 páginas (incluindo
figuras, tabelas e referências) seguindo o formato da SBC para
submissão de artigos.  Coordenação do SSCAD-WIC

    Gabriel P. Silva (Universidade Federal do Rio de Janeiro) — gabriel@ic.ufrj.br
    Samuel Ferraz (Universidade Federal de Mato Grosso do Sul) — samuel.ferraz@ufms.br

Comitê de Programa (a confirmar)

    Adenauer Yamin (Universidade Católica de Pelotas/Universidade Federal de Pelotas)
    Alexandre Carissimi (Universidade Federal do Rio Grande do Sul)
    Anderson Faustino (Universidade Estadual de Maringá)
    André Du Bois (Universidade Federal de Pelotas)
    Andriele Busatto do Carmo (Universidade do Vale do Rio dos Sinos)
    Arthur Lorenzon (Universidade Federal do Rio Grande do Sul)
    Calebe Bianchini (Universidade Presbiteriana Mackenzie)
    Claudio Schepke (Universidade Federal do Pampa)
    Dalvan Griebler (Pontifícia Universidade Católica do Rio Grande do Sul)
    Diego Leonel Cadette Dutra (Universidade Federal do Rio de Janeiro)
    Edson Tavares de Camargo (Universidade Tecnológica Federal do Paraná)
    Edson Luiz Padoin (Universidade Regional do Noroeste do Estado do Rio Grande do Sul)
    Edward Moreno (Universidade Federal de Sergipe)
    Emilio Francesquini (Universidade Federal do ABC)
    Fabíola M. C. de Oliveira (Universidade Federal do ABC)
    Fabrício Góes (University of Leicester)
    Gabriel Nazar (Universidade Federal do Rio Grande do Sul)
    Gabriel P. Silva (Universidade Federal do Rio de Janeiro)
    Gerson Geraldo H. Cavalheiro (Universidade Federal de Pelotas)
    Guilherme Galante (Universidade Estadual do Oeste do Paraná)
    Guilherme Koslovski (Universidade do Estado de Santa Catarina)
    Hélio Guardia (Universidade Federal de São Carlos)
    Henrique Cota de Freitas (Pontifícia Universidade Católica de Minas Gerais)
    Hermes Senger (Universidade Federal de São Carlos)
    João Fabrício Filho (Universidade Tecnológica Federal do Paraná)
    Jorge Barbosa (Universidade do Vale do Rio dos Sinos)
    José Saito (Universidade Federal de São Carlos/Centro Universitário Campo Limpo Paulista)
    Josemar Souza (Universidade do Estado da Bahia)
    Joubert Lima (Universidade Federal de Ouro Preto)
    Juliano Foleiss (Universidade Tecnológica Federal do Paraná)
    Kalinka Castelo Branco (Instituto De Ciências Matemáticas e de Computação – USP)
    Leonardo Pinho (Universidade Federal do Pampa)
    Liana Duenha (Universidade Federal de Mato Grosso do Sul)
    Lucas Mello Schnorr (Universidade Federal do Rio Grande do Sul)
    Lucas Wanner (Universidade Estadual de Campinas)
    Luciano Senger (Universidade Estadual de Ponta Grossa)
    Luis Carlos De Bona (Universidade Federal do Paraná)
    Luiz Carlos Albini (Universidade Federal do Paraná)
    Marcelo Lobosco (Universidade Federal de Juiz de Fora)
    Marcio Oyamada (Universidade Estadual do Oeste do Paraná)
    Marco Wehrmeister (Universidade Tecnológica Federal do Paraná)
    Marco Antonio Zanata Alves (Universidade Federal do Paraná)
    Marcus Botacin (Texas A&M University)
    Maria Clicia Castro (Universidade Estadual do Rio de Janeiro)
    Mario Dantas (Universidade Federal de Juiz de Fora)
    Mateus Rutzig (Universidade Federal de Santa Maria)
    Matheus Souza (Pontifícia Universidade Católica de Minas Gerais)
    Márcio Castro (Universidade Federal de Santa Catarina)
    Márcio Kreutz (Universidade Federal do Rio Grande do Norte)
    Monica Pereira (Universidade Federal do Rio Grande do Norte)
    Nahri Moreano (Universidade Federal de Mato Grosso do Sul)
    Newton Will (Universidade Tecnológica Federal do Paraná)
    Odorico Mendizabal (Universidade Federal de Santa Catarina)
    Omar Cortes (Instituto Federal do Maranhão)
    Paulo Cesar Santos (Universidade Federal do Paraná)
    Rafaela Brum (Universidade Federal Fluminense)
    Renato Ishii (Universidade Federal de Mato Grosso do Sul)
    Ricardo da Rocha (Universidade Federal de Catalão)
    Ricardo Menotti (Universidade Federal de São Carlos)
    Rodolfo Azevedo (Universidade Estadual de Campinas)
    Rodrigo Campiolo (Universidade Tecnológica Federal do Paraná)
    Rodrigo Righi (Universidade do Vale do Rio dos Sinos)
    Rogério Gonçalves (Universidade Tecnológica Federal do Paraná)
    Samuel Ferraz (Universidade Federal do Mato Grosso do Sul)
    Sairo Santos (Universidade Federal Rural do Semi-Árido)
    Sarita Bruschi (Instituto de Ciências Matemáticas e de Computação – USP)
    Sergio Carvalho (Universidade Federal de Goiás)
    Tiago Ferreto (Pontifícia Universidade Católica Rio Grande do Sul)
    Tiago Heinrich (Universidade Federal do Paraná)
    Vinícius Vitor dos Santos Dias (Universidade Federal de Lavras)
    Vinícius Garcia (Universidade Federal do Paraná)
    Vinícius Garcia Pinto (Universidade Federal do Rio Grande)
    Wagner Zola (Universidade Federal do Paraná)
    Wanderson Roger Azevedo Dias (Instituto Federal de Rondônia)

Patrocinadores:
Diamante:

Parceiro:
Organização:
Promoção:
Financiamento:

    Chamada de Trabalhos – Trilha Principal Chamada de Trabalhos –
    Workshop sobre Educação em Arquitetura de Computadores (WEAC)
    Chamada de Trabalhos SSCAD-WIC Comitês Concurso de Teses e
    Dissertações em Arquitetura de Computadores e Computação de Alto
    Desempenho (SSCAD-CTD) Hospedagem Local Minicursos Principal

Copyright ©2025 XXVI SSCAD 2025 . All rights reserved. Powered by
WordPress & Designed by Bizberg Themes

* *The Paper*                                                       :ignore:
** Frontpage                                                        :ignore:

#+BEGIN_EXPORT latex
\makeatletter
\let\orgtitle\@title
\makeatother
\title{\orgtitle}

\author{
Francisco Pegoraro Etcheverria\inst{1},
Lucas Mello Schnorr\inst{1},
Rayan Raddatz de Matos\inst{1},\\
Kenichi Brumati\inst{1}
}

\address{
   Institute of Informatics, Federal University of Rio Grande do Sul (UFRGS)\\
   Caixa Postal 15.064 -- 91.501-970 -- Porto Alegre -- RS -- Brazil
   \email{\{francisco.etcheverria, schnorr, rayan.raddatz, kenichi.brumati\}@inf.ufrgs.br}
   }
#+END_EXPORT

#+LaTeX: \maketitle

** Abstract                                                         :ignore:

#+begin_abstract
Put the abstract here.
#+end_abstract

#+begin_resumo
Coloque o resumo aqui.
#+end_resumo

** Introduction                                                      :RA:KE:

High Performance Computing (HPC) systems have becoming more and more
complex and parallels over the years to accommodate the
applications that are usually irregulars and computationally
demanding. When dealing with this type of irregular applications, one
of the major concerns is the workload distribution among the
computational resources available in order to maximize the performance
and stability. This task, called load balancing, performs
a important role in the performance of a system when executing a
parallel application, ensuring that each processor in the systems does
approximately the same work during the programs execution.   *[Context/Load Balancing]*

_We used the Mandelbrot application in order to verify the load
balancing of a MPI system *[Change later with our objective]*_. The Mandelbrot Set is a set of points $c$
in the complex plane for which the application of the function $f(z) =
z^2 + c$
starting from $z = 0$ is bounded and does not diverge to
infinity cite:mandelbrot1980. To compute and generate this set, an
application needs to, for each pixel in a 2D image, calculate the
value based on the equation previously showned. The application that
does calculation work is highly parallelizable and computacionally
intensive, often serving as benchmark for HPC used to measure the
performance a computational system. *[Mandelbrot]*

*[What is this work?/What we will do about the things we introduced?]*

This paper is organized as follows. Section [[sec.related]] presents related
work. Section [[sec.materials]] discusses all
the materials and methods of our work, including the detailed
description of the observed system. Section [[sec.results]] presents the
experimental results. Finally, Section [[sec.conclusion]] concludes
this work.
** Related Work
<<sec.related>>

** Materials and Methods                                             :FR:LU:
<<sec.materials>>
*** Observed System
**** General overview
- A figure with the design, the threads
  - The role of each thread
**** Computational aspects
- Workload discretization etc
- MPI implementation
*** Hardware & Software configuration
- cei, 6 nodes with 24 hw cores each (144 cores)
- cei + software (mpi version, etc)
  - guix https://guix.gnu.org
    #+begin_src bash
    guix shell openmpi
    #+end_src
*** Experimental Project
**** Input parameters
- Resolução 1920x1080 (FullHD)

- Granularidade [5, 10, 20, 40, 60, 120], que resultam em [82944,
  20736, 5184, 1296, 576, 144] responses (Esses valores foram
  escolhidos porque dividem a largura e altura exatamente). Talvez 5
  seja baixo demais, já que quase 50% de um response é o payload.

- Número de núcleos 1:6 (saltos na quantidade de cores)
  - Ajuster para a máquina

- Sobre as coordenadas, acho que a coordenada inicial
  - easy, um ponto/zoom onde todas as coordenadas escapam rapidamente
    (o laço iterativo que calculo o ponto termina com 1 ou 2 iterações)
  - default -> [f_ll(-2, -1.125), f_ur(2, 1.125)] é uma boa, já que tem
    vários pontos fáceis
  e difíceis.
  - hard -> Uma coordanada onde todo ponto é relativamente difícil
    seria [f_ll(0.25012917440406966100,
    0.0000022362858728693646947011080050658587),
    f_ur(0.25012917440406976709,
    0.0000022362858729754443477445676967781596)], que é bastante
    profunda, e não tem muitos pontos que escapam. A profundidade máxima
    poderia ser ajustada dependendo do tempo que vamos alocar aos
    testes.

- Talvez seja interessante ter um ponto relativemente fácil, mas não
  tenho certeza.

- Neste caso testaria mais a latência da comunicação
  entre workers e o coordenador.
**** Observability (/aka/ Instrumentation Techniques)
**** Design of Experiments (DoE)
***** Text                                                       :ignore:

Description of the design of experiments.

***** Code                                                     :noexport:
#+begin_src R :results output :session *R* :exports none :noweb yes :colnames yes
options(crayon.enabled=FALSE)
library(DoE.base)
library(tidyverse)

fator_granularity = c(5, 10, 20, 40, 60, 120)
fator_nodes = 1:6
fator_coordinates = c("easy", "default", "hard")

fac.design(nfactors = 3,
           replications = 10,
           repeat.only = FALSE,
           randomize = TRUE,
           seed=0,
           nlevels=c(length(fator_granularity),
                     length(fator_nodes),
                     length(fator_coordinates)),
           factor.names=list(
             granularity = fator_granularity,
             nodes = fator_nodes,
             coordinates = fator_coordinates
           )) |>
  as_tibble() |>
  mutate(resolution = '1920x1080') |>
  mutate(depth = case_when(coordinates == "easy" ~ "X",
                           coordinates == "default" ~ "Y",
                           coordinates == "hard" ~ "Z")) |>
  mutate_at(vars(granularity:depth), as.character) |>
  select(granularity, nodes, coordinates, depth, resolution, Blocks) |>
  write_csv("projeto_experimental_francisco.csv", progress=FALSE)
#+end_src

#+RESULTS:
: creating full factorial with 108 runs ...

*** Evaluation procedure
** Results
<<sec.results>>
** Conclusion
<<sec.conclusion>>
** Acknowledgments
:PROPERTIES:
:UNNUMBERED: t
:END:

Who paid for this?
- PCAD
- Scholarships

** References                                                        :ignore:

# See next section to understand how refs.bib file is created.
bibliographystyle:sbc.bst
[[bibliography:refs.bib]]

* Bib file is here                                                 :noexport:

Tangle this file with C-c C-v t
#+begin_src bibtex :tangle refs.bib
@article{orgmode,
  author =	"Eric Schulte and Dan Davison and Thomas Dye and Carsten Dominik",
  title =	"A Multi-Language Computing Environment for Literate Programming and Reproducible Research",
  journal =	"J. of Stat. Soft.",
  volume =	"46",
  number =	"3",
  day =  	"25",
  year = 	"2012",
  CODEN =	"JSSOBK",
  ISSN = 	"1548-7660",
  bibdate =	"2011-10-03",
  accepted =	"2011-10-03",
  acknowledgement = "",
  submitted =	"2010-12-22",
}

@incollection{schnorr2013visualizing,
  title={Visualizing More Performance Data Than What Fits on Your Screen},
  author={Schnorr, Lucas M and Legrand, Arnaud},
  booktitle={Tools for High Performance Computing 2012},
  pages={149--162},
  year={2013},
  publisher={Springer}
}

@inproceedings{mohammed2020two,
  title={Two-level dynamic load balancing for high performance scientific applications},
  author={Mohammed, Ali and Cavelan, Aur{\'e}lien and Ciorba, Florina M and Cabez{\'o}n, Rub{\'e}n M and Banicescu, Ioana},
  booktitle={Proceedings of the 2020 SIAM Conference on Parallel Processing for Scientific Computing},
  pages={69--80},
  year={2020},
  organization={SIAM}
}

@article{mandelbrot1980,
author = {Mandelbrot, Benoit B.},
title = { “Fractal Aspects of the Iteration of Z → z $\Lambda$(1-Z) for Complex $\Lambda$ and Z”},
journal = {Annals of the New York Academy of Sciences},
volume = {357},
number = {1},
pages = {249-259},
year = {1980}
}
#+end_src
* Emacs setup                                                      :noexport:
# Local Variables:
# eval: (add-to-list 'load-path ".")
# eval: (require 'ox-extra)
# eval: (ox-extras-activate '(ignore-headlines))
# eval: (require 'org-ref)
# eval: (require 'doi-utils)
# eval: (add-to-list 'org-latex-packages-alist '("" "url") t)
# eval: (add-to-list 'org-latex-packages-alist '("" "sbc-template") t)
# eval: (add-to-list 'org-latex-packages-alist '("AUTO" "babel" t ("pdflatex")))
# eval: (setq org-latex-pdf-process (list "latexmk -pdf %f"))
# eval: (add-to-list 'org-export-before-processing-hook (lambda (be) (org-babel-tangle)))
# End:
